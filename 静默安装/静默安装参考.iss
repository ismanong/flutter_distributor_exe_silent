; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "权力的游戏.凛冬将至"
#define MyAppVersion "1.5"
#define MyAppPublisher "Yxx, Inc."
#define MyAppURL "https://www.xxx.com/"
#define MyAppExeName "yzLauncher.exe"
#define MyAppAssocName MyAppName + " File"
#define MyAppAssocExt ".myp"
#define MyAppAssocKey StringChange(MyAppAssocName, " ", "") + MyAppAssocExt

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{EB5398FE-C04E-47F1-A857-AF52D6DB36C1}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={%USERPROFILE}\AppData\Local\YxxxSWDesktop\app
ChangesAssociations=yes
DisableProgramGroupPage=yes
; Uncomment the following line to run in non administrative install mode (install for current user only.)
;PrivilegesRequired=lowest
OutputDir=D:\work\pcsdk\pc-sdk\src\Inno Setup output
OutputBaseFilename={#MyAppName}
SetupIconFile=D:\work\pcsdk\pc-sdk\src\GameLauncher\res\got\icon.ico
Compression=lzma
SolidCompression=yes
WizardStyle=modern

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Check: IsCreateShortcut

[Files]
Source: "D:\work\pcsdk\pc-sdk\src\gameOut\swjoy got pc\{#MyAppExeName}"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\work\pcsdk\pc-sdk\src\gameOut\swjoy got pc\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Registry]
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocExt}\OpenWithProgids"; ValueType: string; ValueName: "{#MyAppAssocKey}"; ValueData: ""; Flags: uninsdeletevalue
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}"; ValueType: string; ValueName: ""; ValueData: "{#MyAppAssocName}"; Flags: uninsdeletekey
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\{#MyAppExeName},0"
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#MyAppExeName}"" ""%1"""
Root: HKA; Subkey: "Software\Classes\Applications\{#MyAppExeName}\SupportedTypes"; ValueType: string; ValueName: ".myp"; ValueData: ""
Root: HKLM; Subkey: "Software\Microsoft\Internet Explorer\Main\FeatureControl\FEATURE_BROWSER_EMULATION"; ValueType: dword; ValueName: "{#MyAppExeName}"; ValueData: 2328; Flags: uninsdeletevalue

[Icons]
Name: "{autoprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent

[code]
//关键代码静默安装
procedure InitializeWizard();
begin
//不显示边框，这样就能达到不会闪两下了
WizardForm.BorderStyle:=bsNone;
end;


procedure CurPageChanged(CurPageID: Integer);
//var
//indexpageid3:Integer;
begin
    //因为安装过程界面隐藏不了，所以设置窗口宽高为0
    WizardForm.ClientWidth := ScaleX(0);
    WizardForm.ClientHeight := ScaleY(0);
    if CurPageID = wpWelcome then
    WizardForm.NextButton.OnClick(WizardForm);
    if CurPageID >= wpInstalling then
            WizardForm.Visible := False
        else
            WizardForm.Visible := True;
            // WizardForm.NextButton.OnClick(WizardForm);    
end;

function ShouldSkipPage(PageID: Integer): Boolean;
begin
    Result := True
end;

function IsCreateShortcut(): Boolean;
var
  j: Integer;
  isVerySilent: Boolean;
begin
  isVerySilent := True;
  for j := 1 to ParamCount do
    if CompareText(ParamStr(j), '--noicon=1') = 0 then
    begin
      isVerySilent := False;
      Break;
    end; 

  if isVerySilent then
    Log ('VerySilent')
  else
    Log ('not VerySilent');
  Result := isVerySilent;
end;

// 卸载删除所有文件
procedure CurUninstallStepChanged(CurUninstallStep:TUninstallStep);
begin
  if CurUninstallStep = usDone then
  begin
  DelTree(ExpandConstant('{app}'), True, True, True);
  end;
end;

// 研究下有没有更简单的方式 https://blog.csdn.net/allway2/article/details/122220277